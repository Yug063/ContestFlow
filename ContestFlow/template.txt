                          /*  ॐ त्र्यम्बकं यजामहे सुगन्धिं पुष्टिवर्धनम् |
                             उर्वारुकमिव बन्धनान्मृत्योर्मुक्षीय माऽमृतात् ||  */
 
                        /* 
                            AHAM BHRAMASMI
                        */
#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ordered_multiset tree<int, null_type,less_equal<int>, rb_tree_tag,tree_order_statistics_node_update> 
using namespace __gnu_pbds; // pbds
using namespace std ;
// shortcuts-------------------------------------------------------------------------------------------------------------
#define ff            first
#define ss            second 
#define pb            push_back
#define IOS           ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0) //to synchronize the input of cin and scanf
#define all(x)        x.begin(),x.end()
#define lli long long int 
#define ll long long
#define read(v)       for(auto &x: v) cin>>x 
#define printv(v)     for(ll i=0;i<v.size();i++){cout<<v[i]<<" ";}cout<<endl; 
#define lp(i,a,b)     for(ll i=a;i<b;i++)
#define lpe(i,a,b)    for(ll i=a;i<=b;i++)
#define lpr(i,a,b)    for(ll i=a;i>b;i--)
#define lpre(i,a,b)   for(ll i=a;i>=b;i--)
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<pii> vpii;
typedef vector<pll> vpll;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
//priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq; 
// ------------------------------------------------------------------------------------------------------------------------
// pbds 
// less_equal<int> , greater<int> , greater_equal<int>
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key
const ll MOD=1e9+7;
// for optimal pairing use always two largest numbers by using priority queue     
//CODE----------------------------------------------------------------------------------------------------------------------
#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif
 
void _print(ll t) {cerr << t;}
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(double t) {cerr << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.ff); cerr << ","; _print(p.ss); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}
void solve(){
    
}
int32_t main() {
    IOS;
#ifndef ONLINE_JUDGE
    freopen("Error.txt", "w", stderr);
#endif
    int ttt;
    cin >> ttt;
    lpe(l,1,ttt){
        solve();
    }
      // solve();
}
// sqrtl
// want left min or left max / right min or right max => monotonic stack